# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    param.url: 'http://localhost:3000/'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Serializer\PatchedDateTimeNormalizer:
        tags: [serializer.normalizer]

    App\Events\JwtCreatedSubscriber:
        tags:
            - {
                name: kernel.event_listener,
                event: lexik_jwt_authentication.on_jwt_created,
                method: updateJwtData,
              }

    admin.vote:
        class: App\Admin\VoteAdmin
        arguments: [~, App\Entity\Vote, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: Sondages, label: Liste des Sondages }
        public: true

    admin.user:
        class: App\Admin\UserAdmin
        arguments: [~, App\Entity\User, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: Utilisateurs, label: Liste des Utilisateurs }
        public: true

    admin.place:
        class: App\Admin\PlaceAdmin
        arguments: [~, App\Entity\Place, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: Restaurants, label: Liste des Restaurants }
        public: true

    admin.voice:
        class: App\Admin\VoiceAdmin
        arguments: [~, App\Entity\Voice, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: Votes, label: Liste des Votes }
        public: false

    App\Twig\UrlExtension:
        arguments: [ '%param.url%']
